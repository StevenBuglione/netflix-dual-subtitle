Please update this kotlin function to replicate this javascript funciton

//javascript
if(request.message === "update_opacity")
{

console.log("BACKGROUND.JS recieved a message from SIDESELECTOR to update TEXT_SIDE to " + request.value);
chrome.storage.sync.set({'opacity': request.value});

chrome.tabs.query({active:true, currentWindow:true}, function(tabs){
  chrome.tabs.sendMessage(tabs[0].id, {
    "message": "update_opacity",
    "value": request.value});
  });

}

//kotlin
fun updatePreference(key: String, value: dynamic) {
  console.log("background.js received message to update $key to $value")
  ChromeStorageSync.set(key, value as Any);

}

//Here are the kotlin js imports for the js
external fun query(queryInfo: QueryInfo, callback: (result: Array<Tab>) -> Unit)

external fun <M, R> sendMessage(tabId: Number, message: M): Promise<R>

external fun <M, R> sendMessage(tabId: Number, message: M, options: MessageSendOptions): Promise<R>

external interface MessageSendOptions {
    /**
     * Optional. Send a message to a specific frame identified
     * by frameId instead of all frames in the tab.
     */
    var frameId: Number?
        get() = definedExternally
        set(value) = definedExternally

    /**
     * Optional. Send a message to a specific document identified by documentId instead of all frames in the tab.
     * Since:
     * Chrome 106.
     */
    var documentId: String?
        get() = definedExternally
        set(value) = definedExternally
}